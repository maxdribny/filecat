Directory Structure:
===================
src
    |- main
        |- java
            |- com
                |- ashesembers
                    |- AshesembersMod.java
                    |- client
                        |- particle
                            |- AshesParticle.java
                            |- EmbersParticle.java
                    |- init
                        |- AshesembersModParticleTypes.java
                        |- AshesembersModParticles.java
                    |- procedures
                        |- ParticleEffectsProcedure.java
        |- resources
            |- META-INF
            |- assets
                |- ashesembers
                    |- lang
                    |- particles
                    |- textures
                        |- particle

File Contents:
===============


.JAVA Files:
============

// C:\Users\Max\Desktop\ashes_and_embers\src\main\java\com\ashesembers\AshesembersMod.java
package com.ashesembers;

import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;

import net.minecraftforge.network.simple.SimpleChannel;
import net.minecraftforge.network.NetworkRegistry;
import net.minecraftforge.network.NetworkEvent;
import net.minecraftforge.fml.util.thread.SidedThreadGroups;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.event.TickEvent;
import net.minecraftforge.common.MinecraftForge;

import net.minecraft.resources.ResourceLocation;
import net.minecraft.network.FriendlyByteBuf;

import java.util.function.Supplier;
import java.util.function.Function;
import java.util.function.BiConsumer;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.List;
import java.util.Collection;
import java.util.ArrayList;
import java.util.AbstractMap;

import com.ashesembers.init.AshesembersModParticleTypes;

@Mod("ashesembers")
public class AshesembersMod {
	public static final Logger LOGGER = LogManager.getLogger(AshesembersMod.class);
	public static final String MODID = "ashesembers";

	public AshesembersMod() {
		// Start of user code block mod constructor
		// End of user code block mod constructor
		MinecraftForge.EVENT_BUS.register(this);
		IEventBus bus = FMLJavaModLoadingContext.get().getModEventBus();

		AshesembersModParticleTypes.REGISTRY.register(bus);

		// Start of user code block mod init
		// End of user code block mod init
	}

	// Start of user code block mod methods
	// End of user code block mod methods
	private static final String PROTOCOL_VERSION = "1";
	public static final SimpleChannel PACKET_HANDLER = NetworkRegistry.newSimpleChannel(new ResourceLocation(MODID, MODID), () -> PROTOCOL_VERSION, PROTOCOL_VERSION::equals, PROTOCOL_VERSION::equals);
	private static int messageID = 0;

	public static <T> void addNetworkMessage(Class<T> messageType, BiConsumer<T, FriendlyByteBuf> encoder, Function<FriendlyByteBuf, T> decoder, BiConsumer<T, Supplier<NetworkEvent.Context>> messageConsumer) {
		PACKET_HANDLER.registerMessage(messageID, messageType, encoder, decoder, messageConsumer);
		messageID++;
	}

	private static final Collection<AbstractMap.SimpleEntry<Runnable, Integer>> workQueue = new ConcurrentLinkedQueue<>();

	public static void queueServerWork(int tick, Runnable action) {
		if (Thread.currentThread().getThreadGroup() == SidedThreadGroups.SERVER)
			workQueue.add(new AbstractMap.SimpleEntry<>(action, tick));
	}

	@SubscribeEvent
	public void tick(TickEvent.ServerTickEvent event) {
		if (event.phase == TickEvent.Phase.END) {
			List<AbstractMap.SimpleEntry<Runnable, Integer>> actions = new ArrayList<>();
			workQueue.forEach(work -> {
				work.setValue(work.getValue() - 1);
				if (work.getValue() == 0)
					actions.add(work);
			});
			actions.forEach(e -> e.getKey().run());
			workQueue.removeAll(actions);
		}
	}
}


// C:\Users\Max\Desktop\ashes_and_embers\src\main\java\com\ashesembers\client\particle\AshesParticle.java
package com.ashesembers.client.particle;

import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.core.particles.SimpleParticleType;
import net.minecraft.client.particle.TextureSheetParticle;
import net.minecraft.client.particle.SpriteSet;
import net.minecraft.client.particle.ParticleRenderType;
import net.minecraft.client.particle.ParticleProvider;
import net.minecraft.client.particle.Particle;
import net.minecraft.client.multiplayer.ClientLevel;

@OnlyIn(Dist.CLIENT)
public class AshesParticle extends TextureSheetParticle {
	public static AshesParticleProvider provider(SpriteSet spriteSet) {
		return new AshesParticleProvider(spriteSet);
	}

	public static class AshesParticleProvider implements ParticleProvider<SimpleParticleType> {
		private final SpriteSet spriteSet;

		public AshesParticleProvider(SpriteSet spriteSet) {
			this.spriteSet = spriteSet;
		}

		public Particle createParticle(SimpleParticleType typeIn, ClientLevel worldIn, double x, double y, double z, double xSpeed, double ySpeed, double zSpeed) {
			return new AshesParticle(worldIn, x, y, z, xSpeed, ySpeed, zSpeed, this.spriteSet);
		}
	}

	private final SpriteSet spriteSet;

	protected AshesParticle(ClientLevel world, double x, double y, double z, double vx, double vy, double vz, SpriteSet spriteSet) {
		super(world, x, y, z);
		this.spriteSet = spriteSet;
		this.setSize(0.1f, 0.1f);
		this.quadSize *= 0.5f;
		this.lifetime = (int) Math.max(1, 100 + (this.random.nextInt(120) - 60));
		this.gravity = 0.1f;
		this.hasPhysics = true;
		this.xd = vx * 0;
		this.yd = vy * 0;
		this.zd = vz * 0;
		this.pickSprite(spriteSet);
	}

	@Override
	public ParticleRenderType getRenderType() {
		return ParticleRenderType.PARTICLE_SHEET_TRANSLUCENT;
	}

	@Override
	public void tick() {
		super.tick();
	}
}


// C:\Users\Max\Desktop\ashes_and_embers\src\main\java\com\ashesembers\client\particle\EmbersParticle.java
package com.ashesembers.client.particle;

import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.core.particles.SimpleParticleType;
import net.minecraft.client.particle.TextureSheetParticle;
import net.minecraft.client.particle.SpriteSet;
import net.minecraft.client.particle.ParticleRenderType;
import net.minecraft.client.particle.ParticleProvider;
import net.minecraft.client.particle.Particle;
import net.minecraft.client.multiplayer.ClientLevel;

@OnlyIn(Dist.CLIENT)
public class EmbersParticle extends TextureSheetParticle {
	public static EmbersParticleProvider provider(SpriteSet spriteSet) {
		return new EmbersParticleProvider(spriteSet);
	}

	public static class EmbersParticleProvider implements ParticleProvider<SimpleParticleType> {
		private final SpriteSet spriteSet;

		public EmbersParticleProvider(SpriteSet spriteSet) {
			this.spriteSet = spriteSet;
		}

		public Particle createParticle(SimpleParticleType typeIn, ClientLevel worldIn, double x, double y, double z, double xSpeed, double ySpeed, double zSpeed) {
			return new EmbersParticle(worldIn, x, y, z, xSpeed, ySpeed, zSpeed, this.spriteSet);
		}
	}

	private final SpriteSet spriteSet;

	protected EmbersParticle(ClientLevel world, double x, double y, double z, double vx, double vy, double vz, SpriteSet spriteSet) {
		super(world, x, y, z);
		this.spriteSet = spriteSet;
		this.setSize(0.2f, 0.2f);
		this.quadSize *= 0.3f;
		this.lifetime = (int) Math.max(1, 70 + (this.random.nextInt(100) - 50));
		this.gravity = 0.1f;
		this.hasPhysics = true;
		this.xd = vx * 0;
		this.yd = vy * 0;
		this.zd = vz * 0;
		this.pickSprite(spriteSet);
	}

	@Override
	public ParticleRenderType getRenderType() {
		return ParticleRenderType.PARTICLE_SHEET_TRANSLUCENT;
	}

	@Override
	public void tick() {
		super.tick();
	}
}


// C:\Users\Max\Desktop\ashes_and_embers\src\main\java\com\ashesembers\init\AshesembersModParticleTypes.java
package com.ashesembers.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.core.particles.SimpleParticleType;
import net.minecraft.core.particles.ParticleType;

import com.ashesembers.AshesembersMod;

public class AshesembersModParticleTypes {
	public static final DeferredRegister<ParticleType<?>> REGISTRY = DeferredRegister.create(ForgeRegistries.PARTICLE_TYPES, AshesembersMod.MODID);
	public static final RegistryObject<SimpleParticleType> ASHES = REGISTRY.register("ashes", () -> new SimpleParticleType(false));
	public static final RegistryObject<SimpleParticleType> EMBERS = REGISTRY.register("embers", () -> new SimpleParticleType(false));
}


// C:\Users\Max\Desktop\ashes_and_embers\src\main\java\com\ashesembers\init\AshesembersModParticles.java
package com.ashesembers.init;

import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.RegisterParticleProvidersEvent;
import net.minecraftforge.api.distmarker.Dist;

import com.ashesembers.client.particle.EmbersParticle;
import com.ashesembers.client.particle.AshesParticle;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
public class AshesembersModParticles {
	@SubscribeEvent
	public static void registerParticles(RegisterParticleProvidersEvent event) {
		event.registerSpriteSet(AshesembersModParticleTypes.ASHES.get(), AshesParticle::provider);
		event.registerSpriteSet(AshesembersModParticleTypes.EMBERS.get(), EmbersParticle::provider);
	}
}


// C:\Users\Max\Desktop\ashes_and_embers\src\main\java\com\ashesembers\procedures\ParticleEffectsProcedure.java
package com.ashesembers.procedures;

import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.eventbus.api.Event;
import net.minecraftforge.event.entity.living.LivingEvent;

import net.minecraft.world.level.LevelAccessor;
import net.minecraft.world.entity.Entity;
import net.minecraft.util.RandomSource;
import net.minecraft.util.Mth;
import net.minecraft.tags.TagKey;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.core.registries.Registries;
import net.minecraft.core.particles.SimpleParticleType;
import net.minecraft.core.BlockPos;

import javax.annotation.Nullable;

import com.ashesembers.init.AshesembersModParticleTypes;
import com.ashesembers.AshesembersMod;

@Mod.EventBusSubscriber
public class ParticleEffectsProcedure {
	@SubscribeEvent
	public static void onEntityTick(LivingEvent.LivingTickEvent event) {
		execute(event, event.getEntity().level(), event.getEntity().getX(), event.getEntity().getY(), event.getEntity().getZ(), event.getEntity());
	}

	public static void execute(LevelAccessor world, double x, double y, double z, Entity entity) {
		execute(null, world, x, y, z, entity);
	}

	private static void execute(@Nullable Event event, LevelAccessor world, double x, double y, double z, Entity entity) {
		if (entity == null)
			return;
		if (world.getBiome(BlockPos.containing(x, y, z)).is(TagKey.create(Registries.BIOME, new ResourceLocation("minecraft:is_overworld")))) {
			if (world.canSeeSkyFromBelowWater(BlockPos.containing(x, y, z))) {
				if (!entity.isUnderWater()) {
					AshesembersMod.queueServerWork(10, () -> {
						if (Math.random() < 0.4) {
							if (world instanceof ServerLevel _level)
								_level.sendParticles((SimpleParticleType) (AshesembersModParticleTypes.ASHES.get()), x, y, z, 28, (Mth.nextInt(RandomSource.create(), 1, 20)), (Mth.nextInt(RandomSource.create(), 3, 15)),
										(Mth.nextInt(RandomSource.create(), 1, 20)), 0.1);
						}
						if (Math.random() < 0.2) {
							if (world instanceof ServerLevel _level)
								_level.sendParticles((SimpleParticleType) (AshesembersModParticleTypes.EMBERS.get()), x, y, z, 20, (Mth.nextInt(RandomSource.create(), 1, 20)), (Mth.nextInt(RandomSource.create(), 3, 15)),
										(Mth.nextInt(RandomSource.create(), 1, 20)), 0.1);
						}
					});
				}
			}
		}
	}
}
}


